{"version":3,"sources":["logo.svg","firebase.js","components/login.jsx","components/Form.jsx","components/Todo.jsx","components/TodoList.jsx","hero.js","App.js","reportWebVitals.js","index.js"],"names":["fire","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","database","storage","Login","props","email","setEmail","password","setPassword","handleLogin","handleSignup","hasAccount","setHasAccount","emailError","passwordError","className","type","autoFocus","required","value","onChange","e","target","onClick","Form","inputText","setInputText","todos","setTodos","setStatus","preventDefault","text","completed","id","Date","now","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","Hero","handleLogout","user","tasks","useState","status","setFilteredTodos","useEffect","getLocalTodos","getTasksfromFb","filterHandler","saveLocalTodos","saveDatatoFb","localStorage","setItem","JSON","stringify","getItem","localtodo","parse","ref","child","uid","set","err","console","log","on","snapshot","val","App","setUser","setEmailError","setPasswordError","clearErrors","authListener","auth","onAuthStateChanged","signOut","signInWithEmailAndPassword","catch","code","message","createUserWithEmailAndPassword","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7d42f13.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import firebase from 'firebase';\r\n\r\n var firebaseConfig = {\r\n    apiKey: \"AIzaSyDv_hwGZ_2y3SCm6KRXrLUoi8wtCwS1mto\",\r\n    authDomain: \"taskmanager-eb911.firebaseapp.com\",\r\n    projectId: \"taskmanager-eb911\",\r\n    storageBucket: \"taskmanager-eb911.appspot.com\",\r\n    messagingSenderId: \"787366449944\",\r\n    appId: \"1:787366449944:web:69546834fff86ea08d846d\"\r\n  };\r\n \r\n  const fire = firebase.initializeApp(firebaseConfig);\r\n  const db = firebase.database();\r\n  const storage= firebase.storage();\r\n \r\nexport {fire,db,storage}; ","import React from 'react';\r\n\r\nconst Login = (props) =>{\r\n    const {\r\n        email,\r\n        setEmail,\r\n        password,\r\n        setPassword,\r\n        handleLogin,\r\n        handleSignup,\r\n        hasAccount,\r\n        setHasAccount,\r\n        emailError,\r\n        passwordError,\r\n    } = props;\r\n\r\n    return(\r\n      <section className=\"login\">\r\n            <div className=\"loginContainer\">\r\n                <label>Username</label>\r\n                <input\r\n                    type=\"text\"\r\n                    autoFocus\r\n                    required\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                <p className=\"errorMsg\">{emailError}</p>\r\n                <label>Password</label>\r\n                <input\r\n                    type=\"password\"\r\n                    required\r\n                    value={password}\r\n                    onChange={(e)=> setPassword(e.target.value)}\r\n                />\r\n                <p className=\"errorMsg\">{passwordError}</p>\r\n                <div className=\"btnContainer\">\r\n                    {hasAccount?(\r\n                        <>\r\n                            <button onClick={handleLogin}>Sign In</button>\r\n                            <p>Don't have an account?<span onClick={()=> setHasAccount(!hasAccount)}>sign Up</span></p>\r\n                        </>\r\n                    ):(\r\n                        <>\r\n                            <button onClick={handleSignup}>Sign up</button>\r\n                            <p>Have an account?<span onClick={()=> setHasAccount(!hasAccount)}>sign In</span></p>\r\n                        </>\r\n                    )}\r\n                </div> \r\n            </div>\r\n      </section>  \r\n    )\r\n}\r\n\r\nexport default Login;","import React from \"react\";\r\n\r\nconst Form =({inputText,setInputText, todos, setTodos,setStatus})=>{\r\n    const inputTextHnadler =(e)=>{\r\n          setInputText(e.target.value);\r\n    };\r\n    const submitTodoHandler =(e) =>{\r\n        e.preventDefault();\r\n        setTodos([\r\n            ...todos,\r\n            {text:inputText, completed:false, id: Date.now()} \r\n        ])\r\n        setInputText('');\r\n    }\r\n\r\n    const statusHandler=(e)=>{\r\n        setStatus(e.target.value)\r\n    }\r\n    return(\r\n        <form>\r\n            <input \r\n                value={inputText}\r\n                onChange={inputTextHnadler} \r\n                type=\"text\" \r\n                className=\"todo-input\" />\r\n            <button onClick={submitTodoHandler } className=\"todo-button\" type=\"submit\">\r\n                <i className=\"fas fa-plus-square\"></i>\r\n            </button>\r\n            <div className=\"select\">\r\n                <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n                    <option value=\"all\">All</option>\r\n                    <option value=\"completed\">Completed</option>\r\n                    <option value=\"uncompleted\">Uncompleted</option>\r\n                </select>\r\n            </div>\r\n         </form>\r\n    )\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\n\r\nconst Todo = ({text, todo, todos, setTodos})=>{\r\n    const deleteHandler=()=>{\r\n        setTodos(todos.filter((el) => el.id !== todo.id))\r\n    }\r\n    const completeHandler =()=>{\r\n        setTodos(todos.map(item => {\r\n            if(item.id === todo.id ){\r\n                return {\r\n                    ...item,\r\n                    completed:!item.completed,\r\n                };\r\n            }\r\n            return item;\r\n        }))\r\n    }\r\n    return(\r\n        <div className=\"todo\">\r\n            <li className={`todo-item ${todo.completed? \"completed\" : \"\"}`}> {text}</li>\r\n            <button  onClick={completeHandler} className=\"complete-btn\">\r\n                <i className=\"fas fa-check\"></i>\r\n            </button>\r\n            <button onClick={deleteHandler} className=\"trash-btn\">\r\n                <i className=\"fas fa-trash\"></i>\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo;","import React from 'react';\r\nimport Todo from './Todo'\r\nconst TodoList = ({setTodos,todos,filteredTodos})=>{\r\n    return(\r\n        <div className=\"todo-container\">\r\n            <ul className=\"todo-list\">\r\n            {filteredTodos.map((todo)=>(<Todo \r\n                setTodos={setTodos}\r\n                todos={todos}\r\n                todo={todo} \r\n                text={todo.text} \r\n                key ={todo.id} \r\n                id={todo.id}\r\n            />))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList;\r\n","import React, {useState, useEffect} from 'react';\r\nimport './App.css';\r\nimport Form from './components/Form';\r\nimport TodoList from './components/TodoList';\r\nimport {fire} from './firebase'\r\n\r\nconst Hero = ({handleLogout, user, tasks}) =>{\r\n\r\n\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [todos, setTodos]= useState([]);\r\n  const [status, setStatus] = useState(\"all\");\r\n  const [filteredTodos, setFilteredTodos]= useState([]);\r\n  \r\n\r\n  useEffect(()=>{\r\n    getLocalTodos();\r\n    getTasksfromFb();\r\n  },[]);\r\n\r\n  useEffect(()=>{\r\n    filterHandler();\r\n    saveLocalTodos();\r\n    saveDatatoFb();\r\n  },[todos,status]);\r\n\r\n\r\n \r\n  const filterHandler = () => {\r\n    switch(status){\r\n      case 'completed':\r\n        setFilteredTodos(todos.filter(todo => todo.completed === true));\r\n        break;\r\n        case 'uncompleted':\r\n        setFilteredTodos(todos.filter(todo => todo.completed === false));\r\n        break;\r\n        default :\r\n        setFilteredTodos(todos);  \r\n    }\r\n  };\r\n  const saveLocalTodos =()=>{\r\n     localStorage.setItem('todos', JSON.stringify(todos));\r\n  };\r\n\r\n\r\n  const getLocalTodos =()=>{\r\n    if(localStorage.getItem(\"todos\")=== null)\r\n      localStorage.setItem(\"todos\", JSON.stringify([]));\r\n    else\r\n      {\r\n        let localtodo = JSON.parse(localStorage.getItem('todos'));\r\n        setTodos(localtodo);\r\n\r\n      }\r\n  };\r\n  \r\n  const saveDatatoFb = () =>{\r\n    \r\n    fire\r\n    .database()\r\n    .ref()\r\n    .child(user.uid)\r\n    .set(\r\n      todos,\r\n      err => {\r\n        console.log(err);\r\n      }\r\n      )\r\n  }\r\n\r\n  const getTasksfromFb = () =>{\r\n    fire.database().ref().child(user.uid).on('value', snapshot =>{\r\n      if(snapshot.val()!=null){\r\n        setTodos(snapshot.val());\r\n        console.log(snapshot.val())\r\n      }\r\n    });\r\n  };\r\n\r\n    return(\r\n        <section className='hero'>\r\n            <nav>\r\n                <h2>welcome</h2>\r\n                <button onClick={handleLogout}>Logout</button>\r\n            </nav>\r\n            <div className =\"task-container\">\r\n              <Form \r\n              todos={todos} \r\n              setTodos={setTodos} \r\n              inputText={inputText } \r\n              setInputText={setInputText}\r\n              setStatus={setStatus}\r\n              />\r\n              <TodoList filteredTodos={filteredTodos} setTodos={setTodos} todos={todos} />\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Hero;","import logo from './logo.svg';\nimport React, {useState,useEffect} from 'react';\nimport './App.css';\nimport {fire,db,storage} from './firebase.js';\nimport Login from './components/login';\nimport Hero from './hero';\n\nconst App = () => {\n\n  const [user,setUser] = useState(\"\");\n  const [email,setEmail] = useState(\"\");\n  const [password,setPassword] = useState(\"\");\n  const [emailError,setEmailError] = useState(\"\");\n  const [passwordError,setPasswordError] = useState(\"\");\n  const [hasAccount,setHasAccount] = useState(false);\n  const clearInputs = ()=>{\n     setEmail('');\n     setPassword('');\n  };\n\n  const clearErrors =()=>{\n    setEmailError('');\n    setPasswordError('');\n  };\n\n  const handleLogin = () =>{\n    clearErrors();\n    fire\n    .auth()\n    .signInWithEmailAndPassword(email,password)\n    .catch((err) => {\n      switch (err.code){\n        case \"auth/invalid-email\":\n        case \"auth/user-disabled\":\n        case \"auth/user-not-found\":\n          setEmailError(err.message);\n          break;\n        case \"auth/wrong-password\":\n          setPasswordError(err.message);\n          break;\n      }\n      \n    })\n  };\n\n  const handleSignup = ()=>{\n    clearErrors();\n    fire\n    .auth()\n    .createUserWithEmailAndPassword(email,password)\n    .catch((err) => {\n      switch (err.code){\n        case \"auth/email-already-in-use\":\n        case \"auth/inavlid-email\":\n          setEmailError(err.message);\n          break;\n        case \"auth/weak-password\":\n          setPasswordError(err.message);\n          break;\n      }\n\n    });\n\n  };\n\n\n  const handleLogout = () => {\n    fire.auth().signOut();\n  };\n\n\n  const authListener = () => {\n    fire.auth().onAuthStateChanged(user => {\n      if(user){\n        clearInputs();\n        setUser(user);\n      }\n      else{\n        setUser(\"\");\n      }\n    });\n  };\n \n\n  useEffect(() =>{\n    authListener();\n  }, []);\n\n\n  return (\n    <div className=\"App\">\n      {user ? \n         (<Hero \n          handleLogout={handleLogout} \n          user={user}\n          />) \n         : \n         (\n          <Login\n          email={email} \n          setEmail={setEmail}\n          password={password}\n          setPassword={setPassword}\n          handleLogin={handleLogin}\n          handleSignup={handleSignup}\n          hasAccount={hasAccount}\n          setHasAccount={setHasAccount}\n          emailError={emailError}\n          passwordError={passwordError}\n        />\n         )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}